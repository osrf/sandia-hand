cmake_minimum_required(VERSION 2.4.6)
if (NOT EXISTS "$ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake")
  message(FATAL_ERROR "Cannot find rosbuild.cmake. Ensure that ROS is installed, source the appropriate ROS configuration file (e.g. /opt/ros/fuerte/setup.sh), delete your CMakeCache.txt and try again.")
endif()
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)
set(ENV{ROS_PACKAGE_PATH} ${PROJECT_SOURCE_DIR}:$ENV{ROS_PACKAGE_PATH})
rosbuild_init()
#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
include_directories(include)
add_subdirectory(common)
add_subdirectory(cli)
add_subdirectory(nodes)
